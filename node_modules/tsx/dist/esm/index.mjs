var L=Object.defineProperty;var m=(t,a)=>L(t,"name",{value:a,configurable:!0});import{isMainThread as M}from"node:worker_threads";import{i as h,a as D,e as $,m as b}from"../node-features-_8ZFwP_x.mjs";import{r as A}from"../register-AuYqD7n5.mjs";import"../get-pipe-path-BHW2eJdv.mjs";import"node:module";import P from"node:path";import{fileURLToPath as _,pathToFileURL as I}from"node:url";import"get-tsconfig";import R from"node:fs";import"esbuild";import"node:crypto";import{i as W,a as v,t as C,b as Q}from"../index-Wyzp0xEz.mjs";import{p as k}from"../client-BQVF1NaW.mjs";import{l as T,t as w,a as q,b as U,f as j,c as N,d as O,e as G,g as H,h as X,j as B,k as S}from"../register-4nqc5fVY.mjs";import"../require-DPg81aJZ.mjs";import{readFile as K}from"node:fs/promises";import"module";import"../temporary-directory-CwHp0_NW.mjs";import"node:os";import"node:net";const p={active:!0},z=m(async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);p.namespace=t.namespace,t.tsconfig!==!1&&T(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(p.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(p.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),x=m(()=>(T(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),d=new Map,V=m(async t=>{if(d.has(t))return d.get(t);if(!await R.promises.access(t).then(()=>!0,()=>!1)){d.set(t,void 0);return}const o=await R.promises.readFile(t,"utf8");try{const n=JSON.parse(o);return d.set(t,n),n}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),Y=m(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const o=_(a),n=await V(o);if(n)return n;const e=a;if(a=new URL("../package.json",a),a.pathname===e.pathname)break}},"findPackageJson"),Z=m(async t=>(await Y(t))?.type??"commonjs","getPackageType"),tt=m(t=>{[t]=t.split("?");const a=P.extname(t);if(a===".json")return"json";if(a===".mjs"||a===".mts")return"module";if(a===".cjs"||a===".cts")return"commonjs"},"getFormatFromExtension"),at=m(t=>{const a=tt(t);if(a)return a;if(w.test(t))return Z(t)},"getFormatFromFileUrl"),u="tsx-namespace=",g=m(t=>{const a=t.indexOf(u);if(a===-1)return;const o=t[a-1];if(o!=="?"&&o!=="&")return;const n=a+u.length,e=t.indexOf("&",n);return e===-1?t.slice(n):t.slice(n,e)},"getNamespace"),y=h(D)?"importAttributes":"importAssertions",st=m(async(t,a,o)=>{if(!p.active)return o(t,a);const n=g(t);if(p.namespace&&p.namespace!==n)return o(t,a);if(p.port){const s=new URL(t);s.searchParams.delete("tsx-namespace"),p.port.postMessage({type:"load",url:s.toString()})}k.send&&k.send({type:"dependency",path:t}),q.test(t)&&(a[y]||(a[y]={}),a[y].type="json");const e=await o(t,a),i=t.startsWith("file://")?_(t):t;if(e.format==="commonjs"&&h($)&&e.responseURL?.startsWith("file:")&&!i.endsWith(".cjs")){const s=await K(new URL(t),"utf8");if(!i.endsWith(".js")||W(s)){const c=v(s,i,{tsconfigRaw:j?.(i)}),f=new URLSearchParams({filePath:i});return n&&f.set("namespace",n),e.responseURL=`data:text/javascript,${encodeURIComponent(c.code)}?${f.toString()}`,e}}if(!e.source)return e;const r=e.source.toString();if(e.format==="json"||w.test(t)){const s=await C(r,i,{tsconfigRaw:j?.(i)});return{format:"module",source:U(s)}}if(e.format==="module"){const s=Q(i,r);s&&(e.source=U(s))}return e},"load"),l=m(async t=>(!t.format&&t.url.startsWith(B)&&(t.format=await at(t.url)),t),"resolveMissingFormat"),et=[".js",".json",".ts",".tsx",".jsx"],E=m(async(t,a,o)=>{const[n,e]=t.split("?");let i;for(const r of et)try{return await l(await o(n+r+(e?`?${e}`:""),a))}catch(s){if(i===void 0&&s instanceof Error){const{message:c}=s;s.message=s.message.replace(`${r}'`,"'"),s.stack=s.stack.replace(c,s.message),i=s}}throw i},"tryExtensions"),F=m(async(t,a,o)=>{const n=O.test(t),e=n?"index":"/index",[i,r]=t.split("?");try{return await E(i+e+(r?`?${r}`:""),a,o)}catch(s){if(!n)try{return await E(t,a,o)}catch{}const c=s,{message:f}=c;throw c.message=c.message.replace(`${e.replace("/",P.sep)}'`,"'"),c.stack=c.stack.replace(f,c.message),c}},"tryDirectory"),J=m(async(t,a,o,n)=>{if(!p.active)return o(t,a);const e=a.parentURL&&g(a.parentURL);if(N(t)){let r=g(t);if(e&&!r&&(r=e,t+=`${t.includes("?")?"&":"?"}${u}${e}`),p.namespace&&p.namespace!==r)return o(t,a);if(O.test(t))return await F(t,a,o)}else if(S&&!a.parentURL?.includes("/node_modules/")){const r=S(t);for(const s of r)try{return await J(I(s).toString(),a,o)}catch{}}if((t.startsWith("#")||!G.test(t))&&(w.test(a.parentURL)||H)){const r=X(t);if(r)for(const s of r)try{return await l(await o(s,a))}catch(c){const{code:f}=c;if(f!=="ERR_MODULE_NOT_FOUND"&&f!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}}try{const r=await l(await o(t,a));if(N(r.url)){const s=g(r.url);e&&!s&&(r.url+=`${r.url.includes("?")?"&":"?"}${u}${e}`)}return r}catch(r){if(r instanceof Error&&!n){const{code:s}=r;if(s==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await F(t,a,o)}catch(c){if(c.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw c}if(s==="ERR_MODULE_NOT_FOUND")try{return await E(t,a,o)}catch{}}throw r}},"resolve");h(b)&&M&&A();export{x as globalPreload,z as initialize,st as load,J as resolve};
